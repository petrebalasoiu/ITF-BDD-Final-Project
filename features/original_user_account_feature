Feature: Verify the user login functionality
  Background:
    Given the user is on the login page


  Scenario: Verify that the user can log in when inserting valid credentials
    When the user inserts username "<test.user1>" and password "<test>"
    When the user clicks on the login button
    Then the user is successfully logged into the account


  Scenario: Verify that the user is presented with error when inserting invalid username and valid password
    When the user inserts username "<test.user>" and password "<test>"
    # dupe
    When the user clicks on the login button
    Then the user is presented with an invalid username error and cannot log into the account


  Scenario: Verify that the user cannot log in when inserting valid username and invalid password
    When the user inserts username "<placeholder>" and password "<placeholder>"
    # dupe
    When the user clicks on the login button
    Then the user is presented with an invalid password error and cannot log into the account


  Scenario: Verify that the user cannot log in without inserting an username
    When the user inserts username "<>" and password "<testtest>"
    # dupe
    When the user clicks on the login button
    Then the user is presented with an error and cannot log into the account


  Scenario: Verify that the user cannot log in without inserting a password
    When the user inserts username "<username>" and password "<>"
    # dupe
    When the user clicks on the login button
    Then the user is presented with an error and cannot log into the account


   # verify that a new user can registered successfully
   # verify that a user cannot register if a field is missing

   _______________________________________________________________________________________

   from behave import *


@given('the user is on the login page')
def step_impl(context):
    context.user_account_page.navigate_to_login_page()


@when('the user inserts username "<test.user1>" and password "<test>"')
def step_impl(context):
    context.user_account_page.insert_valid_login_details()


# +3
@when('the user clicks on the login button')
def step_impl(context):
    context.user_account_page.click_login_button()


@then('the user is successfully logged into the account')
def step_impl(context):
    context.user_account_page.assert_login()


@when('the user inserts username "<test.user>" and password "<test>"')
def step_impl(context):
    context.user_account_page.insert_invalid_username_valid_password()


@then('the user is presented with an invalid username error and cannot log into the account')
def step_impl(context):
    context.user_account_page.nvalid_username_error()
#
#
# @when('the user inserts username "<placeholder>" and password "<placeholder>"')
# def step_impl(context):
#     pass
#
#
# @then('the user is presented with an invalid password error and cannot log into the account')
# def step_impl(context):
#     pass
#
#
# @when('the user inserts username "<>" and password "<testtest>"')
# def step_impl(context):
#     pass
#
#
# @then('the user is presented with an error and cannot log into the account')
# def step_impl(context):
#     pass
#
#
# @when('the user inserts username "<username>" and password "<>"')
# def step_impl(context):
#     pass
#
#
# @then('the user is presented with an error and cannot log into the account')
# def step_impl(context):
#     pass
